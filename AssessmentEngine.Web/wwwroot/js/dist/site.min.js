const AjaxForm=function(i){this.sel=i.sel,this.$form=$(this.sel),this.action=this.$form.action};AjaxForm.prototype.isValid=function(){return this.$form.validate(),this.$form.valid()},AjaxForm.prototype.serialize=function(){const i={};return this.$form.serializeArray().forEach(o=>i[o.name]=o.value),i},AjaxForm.prototype.submit=function(i,o,t){this.isValid&&$.post(this.$form.attr("action"),i,o).fail(t)};const ManageParticipantView=function(){const i=new Vue({el:"#confirmationModal",data:{userId:null,action:null,modalTitle:"",modalText:""},methods:{confirmAction:function(){if(this.userId)switch(this.action){case"toggleLockout":$.post("/Identity/Participant/ToggleLockout?userId="+this.userId,()=>window.location.reload());break;case"delete":$.post("/Identity/Participant/Delete?userId="+this.userId,()=>window.location.reload())}},cancelAction:function(){this.userId=null,this.action=null,this.modalTitle="",this.modalText=""}}}),o=new Vue({el:"#grid",methods:{toggleLockout:function(o){i.action="toggleLockout",i.userId=o,i.modalTitle="Confirm",i.modalText="Are you sure you want to update this participant?",$("#confirmationModal").modal("show")},deleteParticipant:function(o){i.action="delete",i.userId=o,i.modalTitle="Confirm Delete",i.modalText="Are you sure you want to delete this participant?",$("#confirmationModal").modal("show")}}});return{confirmationModal:i,grid:o}},TaskVersion=function(i){$((function(){$("#editTaskVersion").on("submit",e),$("#AssessmentTypeId").on("change",o),o()}));const o=function(){2===parseInt($("#AssessmentTypeId").val())?$("#blockTypeContainer").show():$("#blockTypeContainer").hide()},t=new Vue({el:"#blockGrid",data:{blockVersions:i.blockVersions.map(i=>({isEditing:!1,uid:i.uid,blockTypeId:i.blockTypeId,blockType:i.blockType.name,cognitiveLoad:i.cognitiveLoad,series:i.series}))},methods:{editRow:function(i){const o=this.blockVersions.find(o=>o.uid===i);o&&(o.isEditing=!o.isEditing)},finishEdit:function(){this.blockVersions.forEach(i=>i.isEditing=!1)}}}),e=function(i){i.preventDefault();const o=new AjaxForm({sel:i.target}),e=i=>{},n=o.serialize();n.blockVersions=t.blockVersions.map(i=>({Id:i.id,Uid:i.uid,CognitiveLoad:i.cognitiveLoad,Series:i.series,BlockTypeId:i.blockTypeId})),o.submit(n,i=>{i.isValid?window.location.href="/Tasks/TaskVersion/":i.errors},e)};return{blockGrid:t,submitForm:e}};