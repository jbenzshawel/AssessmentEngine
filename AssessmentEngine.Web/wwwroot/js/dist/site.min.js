const HttpService={post:function(t,e){$.ajax({url:t,success:e,method:"POST",error:function(t){alert("Unexpected error see console for details"),console.error(t)}})},postData:function(t,e,i){$.ajax({url:t,success:i,data:e,method:"POST",error:function(t){alert("Unexpected error see console for details"),console.error(t)}})},get:function(t,e,i){$.ajax({url:t,success:e,method:"GET",cache:i||!1,error:function(t){alert("Unexpected error see console for details"),console.error(t)}})}},AjaxForm=function(t){this.sel=t.sel,this.$form=$(this.sel),this.action=this.$form.action};AjaxForm.prototype.isValid=function(){return this.$form.validate(),this.$form.valid()},AjaxForm.prototype.serialize=function(){const t={};return this.$form.serializeArray().forEach(e=>t[e.name]=e.value),t},AjaxForm.prototype.submit=function(t,e){this.isValid()&&HttpService.postData(this.$form.attr("action"),t,e)};const BootstrapUtility={toggleLoadingSpinner:function(){const t=$("#viewLoading"),e=$("#viewContainer");t.is(":visible")?(t.hide(),e.show()):(e.hide(),t.show())},alertMsg:function(t,e,i){const o=$(t);if(0===o.lengh||!e||!i)return;const n='<div class="alert alert-__type__ alert-dismissible fade show" role="alert">\n            __text__\n            <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n                <span aria-hidden="true">&times;</span>\n            </button>\n        </div>'.replace("__type__",e).replace("__text__",i);o.html(n)}},ManageParticipantView=function(t){const e=new Vue({el:"#confirmationModal",data:{modalId:null,action:null,modalTitle:"",modalText:""},methods:{confirmAction:function(){if(this.modalId){switch(this.action){case"toggleLockout":const t=i.getParticipant(this.modalId);HttpService.post("/Identity/Participant/ToggleLockout?userId="+this.modalId,()=>{t.enabled=!t.enabled});break;case"delete":HttpService.post("/Identity/Participant/Delete?userId="+this.modalId,()=>{i.deleteParticipant(this.modalId)})}$("#confirmationModal").modal("hide")}},cancelAction:function(){this.modalId=null,this.action=null,this.modalTitle="",this.modalText=""}}}),i=new Vue({el:"#grid",data:{participants:t.participants},methods:{toggleLockout:function(t){e.action="toggleLockout",e.modalId=t,e.modalTitle="Confirm",e.modalText="Are you sure you want to update this participant?",$("#confirmationModal").modal("show")},confirmDelete:function(t){e.action="delete",e.modalId=t,e.modalTitle="Confirm Delete",e.modalText="Are you sure you want to delete this participant?",$("#confirmationModal").modal("show")},getParticipant:function(t){return this.participants.find(e=>e.userId===t)},deleteParticipant:function(t){const e=this.participants.findIndex(e=>e.userId===t);-1!==e&&this.participants.splice(e,1)}}});return setTimeout(BootstrapUtility.toggleLoadingSpinner,150),{confirmationModal:e,grid:i}},TaskVersionView=function(t){$((function(){$("#editTaskVersion").on("submit",o),$("#AssessmentTypeId").on("change",e),e()}));const e=function(){2===parseInt($("#AssessmentTypeId").val())?$("#blockTypeContainer").show():$("#blockTypeContainer").hide()},i=new Vue({el:"#blockGrid",data:{blockVersions:t.blockVersions.map(t=>({isEditing:!1,id:t.id,uid:t.uid,blockTypeId:t.blockTypeId,blockType:t.blockType.name,cognitiveLoad:t.cognitiveLoad,series:t.series}))},methods:{editRow:function(t){this.finishEdit();const e=this.getVersion(t);e&&(e.isEditing=!e.isEditing)},finishEdit:function(){this.blockVersions.forEach(t=>t.isEditing=!1)},toggleCheck:function(t,e){const i=this.getVersion(t);e.target.checked?this.setVersionSeries(i):i.series=null},setVersionSeries:function(t){HttpService.get("/Tasks/TaskVersion/RandomSeries",e=>t.series=e)},getVersion:function(t){return this.blockVersions.find(e=>e.uid===t)}}}),o=function(t){t.preventDefault();const e=new AjaxForm({sel:t.target}),o=e.serialize();o.blockVersions=i.blockVersions.map(t=>({Id:t.id,Uid:t.uid,CognitiveLoad:t.cognitiveLoad,Series:t.series,BlockTypeId:t.blockTypeId})),e.submit(o,t=>{0!==$("#ajaxAlert").length?t.isValid?BootstrapUtility.alertMsg("#ajaxAlert","success","Task version saved successfully!"):BootstrapUtility.alertMsg("#ajaxAlert","danger","Please fix the following errors: "+t.errors.join(", ")):window.location.href="/Tasks/TaskVersion/Edit/"+t.data.taskVersionId})};return{blockGrid:i,submitForm:o}},TaskVersionsView=function(t){const e=new Vue({el:"#confirmationModal",data:{modalId:null,action:null,modalTitle:"",modalText:""},methods:{confirmAction:function(){if(this.modalId)switch(this.action){case"delete":HttpService.post("/Tasks/TaskVersion/Delete/"+this.modalId,()=>{i.deleteVersion(this.modalId),$("#confirmationModal").modal("hide")})}},cancelAction:function(){this.modalId=null,this.action=null,this.modalTitle="",this.modalText=""}}}),i=new Vue({el:"#grid",data:{versions:t},methods:{confirmDelete:function(t){e.modalId=t,e.action="delete",e.modalTitle="Confirm",e.modalText="Are you sure you want to delete this assessment version?",$("#confirmationModal").modal("show")},deleteVersion:function(t){const e=this.versions.findIndex(e=>e.id===t);-1!==e&&this.versions.splice(e,1)}}});return setTimeout(BootstrapUtility.toggleLoadingSpinner,150),{confirmationModal:e,grid:i}};